/*
 * Copyright (c) 2016 deltaDNA Ltd. All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'http://edinlin01:8082/artifactory/libs-snapshot-local' }
        maven { url 'http://deltadna.bintray.com/android' }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    compileSdkVersion = 23
    buildToolsVersion = '23.0.2'
    
    minSdkVersion    = 15
    targetSdkVersion = 23
    
    sourceCompatibilityVersion = JavaVersion.VERSION_1_7
    targetCompatibilityVersion = JavaVersion.VERSION_1_7
    
    // can't update to 8.4.0 due to https://code.google.com/p/android/issues/detail?id=187483
    // N.B in 'AdvertisingIdClient' class has been moved in 8.* to 'basement' package
    // https://developers.google.com/android/reference/com/google/android/gms/ads/identifier/AdvertisingIdClient
    playServicesVersion = '7.8.0'
    annotationsVersion = '23.2.1'
    
    appCompatVersion = '23.2.1'
    
    kotlinVersion = '1.0.1'
    
    logTagName  = 'LOG_TAG'
    logTagValue = 'deltaDNA'
}

def getSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}
